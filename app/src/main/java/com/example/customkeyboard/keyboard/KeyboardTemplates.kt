package com.example.customkeyboard.keyboard

class KeyboardTemplates {

    fun getTempleKeyboardEn(keyboardState: KeyboardState): Array<Array<String>> {
        val keysMatrix = when (keyboardState) {
            KeyboardState.CAPS -> arrayOf(
                arrayOf("Q", "W", "E", "R", "T", "Y", "U", "I", "O", "P"),
                arrayOf("A", "S", "D", "F", "G", "H", "J", "K", "L"),
                arrayOf("Shift", "Z", "X", "C", "V", "B", "N", "M", "delete"),
                arrayOf("123", "emoji", ",", " ", ".", "languageRu", "enter")
            )

            KeyboardState.NOCAPS -> arrayOf(
                arrayOf("q", "w", "e", "r", "t", "y", "u", "i", "o", "p"),
                arrayOf("a", "s", "d", "f", "g", "h", "j", "k", "l"),
                arrayOf("shift", "z", "x", "c", "v", "b", "n", "m", "delete"),
                arrayOf("123", "emoji", ",", " ", ".", "languageRu", "enter")
            )

            KeyboardState.DOUBLECAPS -> arrayOf(
                arrayOf("Q", "W", "E", "R", "T", "Y", "U", "I", "O", "P"),
                arrayOf("A", "S", "D", "F", "G", "H", "J", "K", "L"),
                arrayOf("SHIFT", "Z", "X", "C", "V", "B", "N", "M", "delete"),
                arrayOf("123", "emoji", ",", " ", ".", "languageRu", "enter")
            )

            KeyboardState.NUMBER -> arrayOf(
                arrayOf("1", "2", "3", "4", "5", "6", "7", "8", "9", "0"),
                arrayOf("@", "#", "$", "%", "&", "-", "+", "(", ")"),
                arrayOf("=", "*", "\"", "'", ":", ";", "!", "?", "delete"),
                arrayOf("ABC", ",", "_", " ", "/", ".", "enter")
            )

            KeyboardState.EMOJI -> arrayOf(
                arrayOf("back", "üòÅ", "üòÇ", "üòÉ", "üòÜ", "üòá", "üòà", "üòâ", "üòä", "üòã", "üòå", "üòç", "üòé"),
                arrayOf("üòì", "üòî", "üòñ", "üòò", "üòö", "üòú", "üòù", "üòû", "üò†", "üò°", "üò¢", "üò£", "üò§"),
                arrayOf("üò•", "üò®", "üò©", "üò™", "üò´", "üò≠", "üò∞", "üòê", "üòí", "üò±", "üò≤", "üò≥", "üòµ"),
                arrayOf("üò∂", "üò∑", "üò∏", "üòπ", "üò∫", "üòª", "üòº", "üòΩ", "üòæ", "üòø", "üôÄ", "üôÖ", "üòè"),
                arrayOf("üôá", "üôà", "üôâ", "üôä", "üôã", "üôå", "üôç", "üôé", "‚úã", "‚úã", "üê≤", "üëÄ", "üêù"),
            )

            else -> arrayOf(
                arrayOf("Q", "W", "E", "R", "T", "Y", "U", "I", "O", "P"),
                arrayOf("A", "S", "D", "F", "G", "H", "J", "K", "L"),
                arrayOf("Shift", "Z", "X", "C", "V", "B", "N", "M", "delete"),
                arrayOf("123", "emoji", ",", " ", ".", "languageRu", "enter")
            )
        }
        return keysMatrix
    }

    fun getTempleKeyboardRus(keyboardState: KeyboardState): Array<Array<String>> {
        val keysMatrix = when (keyboardState) {
            KeyboardState.CAPS -> arrayOf(
                arrayOf("–ô", "–¶", "–£", "–ö", "–ï", "–ù", "–ì", "–®", "–©", "–ó", "–•", "–™"),
                arrayOf("–§", "–´", "–í", "–ê", "–ü", "–†", "–û", "–õ", "–î", "–ñ", "–≠"),
                arrayOf("Shift", "–Ø", "–ß", "–°", "–ú", "–ò", "–¢", "–¨", "–ë", "–Æ", "delete"),
                arrayOf("123", "emoji", ",", " ", ".", "languageEn", "enter")
            )

            KeyboardState.NOCAPS -> arrayOf(
                arrayOf("–π", "—Ü", "—É", "–∫", "–µ", "–Ω", "–≥", "—à", "—â", "–∑", "—Ö", "—ä"),
                arrayOf("—Ñ", "—ã", "–≤", "–∞", "–ø", "—Ä", "–æ", "–ª", "–¥", "–∂", "—ç"),
                arrayOf("shift", "—è", "—á", "—Å", "–º", "–∏", "—Ç", "—å", "–±", "—é", "delete"),
                arrayOf("123", "emoji", ",", " ", ".", "languageEn", "enter")
            )

            KeyboardState.DOUBLECAPS -> arrayOf(
                arrayOf("–ô", "–¶", "–£", "–ö", "–ï", "–ù", "–ì", "–®", "–©", "–ó", "–•", "–™"),
                arrayOf("–§", "–´", "–í", "–ê", "–ü", "–†", "–û", "–õ", "–î", "–ñ", "–≠"),
                arrayOf("SHIFT", "–Ø", "–ß", "–°", "–ú", "–ò", "–¢", "–¨", "–ë", "–Æ", "delete"),
                arrayOf("123", "emoji", ",", " ", ".", "languageEn", "enter")
            )

            KeyboardState.NUMBER -> arrayOf(
                arrayOf("1", "2", "3", "4", "5", "6", "7", "8", "9", "0"),
                arrayOf("@", "#", "$", "%", "&", "-", "+", "(", ")"),
                arrayOf("=", "*", "\"", "'", ":", ";", "!", "?", "delete"),
                arrayOf("ABC", ",", "_", " ", "/", ".", "enter")
            )

            KeyboardState.EMOJI -> arrayOf(
                arrayOf("back", "üòÅ", "üòÇ", "üòÉ", "üòÜ", "üòá", "üòà", "üòâ", "üòä", "üòã", "üòå", "üòç", "üòé"),
                arrayOf("üòì", "üòî", "üòñ", "üòò", "üòö", "üòú", "üòù", "üòû", "üò†", "üò°", "üò¢", "üò£", "üò§"),
                arrayOf("üò•", "üò®", "üò©", "üò™", "üò´", "üò≠", "üò∞", "üòê", "üòí", "üò±", "üò≤", "üò≥", "üòµ"),
                arrayOf("üò∂", "üò∑", "üò∏", "üòπ", "üò∫", "üòª", "üòº", "üòΩ", "üòæ", "üòø", "üôÄ", "üôÖ", "üòè"),
                arrayOf("üôá", "üôà", "üôâ", "üôä", "üôã", "üôå", "üôç", "üôé", "‚úã", "‚úã", "üê≤", "üëÄ", "üêù"),
            )

            else -> arrayOf(
                arrayOf("–ô", "–¶", "–£", "–ö", "–ï", "–ù", "–ì", "–®", "–©", "–ó", "–•", "–™"),
                arrayOf("–§", "–´", "–í", "–ê", "–ü", "–†", "–û", "–õ", "–î", "–ñ", "–≠"),
                arrayOf("SHIFT", "–Ø", "–ß", "–°", "–ú", "–ò", "–¢", "–¨", "–ë", "–Æ", "delete"),
                arrayOf("123", "emoji", ",", " ", ".", "languageEn", "enter")
            )
        }
        return keysMatrix
    }
}